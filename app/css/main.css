body {
  background-color: #ddd;
  color: #222;
  line-height: 1.4; }

header .navbar {
  border-radius: 0;
  margin: 0; }

.hero {
  background-image: url(http://source.unsplash.com/random);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  padding: 50px 0;
  min-height: 450px;
  position: relative; }

.hero-content {
  position: relative;
  top: 25%;
  text-align: center;
  width: 100%; }

.hero-content h2 {
  color: #fff;
  font-size: 80px; }

.hero-content p {
  color: #fff;
  font-size: 40px;
  margin-bottom: 30px; }

.hero-content .btn {
  border-radius: 2px;
  padding: 20px 30px; }

main {
  min-height: 500px;
  padding: 50px 0; }

p {
  font-size: 1.75rem;
  line-height: 3rem;
  margin-top: 0rem;
  padding-top: 0.849rem;
  padding-bottom: 0.151rem;
  margin-bottom: 2rem; }

footer {
  padding: 30px 0;
  font-size: 14px;
  color: #bbb;
  background: #222;
  text-align: center; }

.active {
  font-weight: bold;
  color: #fff !important; }

.team__item {
  float: left;
  padding: 0 14px; }
  .team__item img {
    max-height: 300px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
